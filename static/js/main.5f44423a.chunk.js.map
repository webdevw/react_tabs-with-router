{"version":3,"sources":["components/Tabs/Tabs.tsx","pages/TabsPage/TabsPage.tsx","components/Navbar/NavBar.tsx","pages/HomePage/HomePage.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","selectedTabId","selectedTab","find","tab","id","className","map","title","to","content","TabsPage","useParams","tabId","PageNavLink","text","isActive","classNames","NavBar","HomePage","App","path","element","replace","index","ReactDOM","render","document","getElementById"],"mappings":"gOAQaA,EAAwB,SAAC,GAG/B,IAFLC,EAEI,EAFJA,KACAC,EACI,EADJA,cAEMC,EACJF,EAAKG,MAAK,SAACC,GAAD,OACRA,EAAIC,KAAOJ,KAIf,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKK,UAAU,gBAAf,SACE,6BACGN,EAAKO,KAAI,SAACH,GACT,IAAQC,EAAcD,EAAdC,GAAIG,EAAUJ,EAAVI,MAEZ,OACE,oBAEE,UAAQ,MACRF,UACED,KAAE,OAAKH,QAAL,IAAKA,OAAL,EAAKA,EAAaG,IAChB,YACA,GANR,SASE,cAAC,IAAD,CACEI,GAAE,gBAAWJ,GACb,UAAQ,UAFV,SAIGG,KAZEH,UAoBf,qBAAKC,UAAU,QAAQ,UAAQ,aAA/B,SACGJ,EAAcA,EAAYQ,QAAU,4BC5ChCV,EAAc,CACzB,CAAEK,GAAI,QAASG,MAAO,QAASE,QAAS,eACxC,CAAEL,GAAI,QAASG,MAAO,QAASE,QAAS,eACxC,CAAEL,GAAI,QAASG,MAAO,QAASE,QAAS,gBAG7BC,EAAqB,WAChC,MAAwBC,cAAhBC,aAAR,MAAgB,IAAhB,EAEA,OACE,qCACE,oBAAIP,UAAU,QAAd,uBACA,cAAC,EAAD,CACEN,KAAMA,EACNC,cAAeY,Q,gBCTVC,EAAyB,SAAC,GAAD,IAAGL,EAAH,EAAGA,GAAIM,EAAP,EAAOA,KAAP,OACpC,cAAC,IAAD,CACEN,GAAIA,EACJH,UAAW,gBAAGU,EAAH,EAAGA,SAAH,OACTC,IAAW,cAAe,CAAE,YAAaD,KAH7C,SAMGD,KAIQG,EAAS,WACpB,OACE,qBACEZ,UAAU,oDACV,UAAQ,MAFV,SAIE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,eAAf,UACE,cAAC,EAAD,CAAaG,GAAG,IAAIM,KAAK,SACzB,cAAC,EAAD,CAAaN,GAAG,QAAQM,KAAK,iBC7B1BI,EAAW,kBACtB,oBAAIb,UAAU,QAAd,wBCWWc,EAAM,kBACjB,qCACE,cAAC,EAAD,IAEA,qBAAKd,UAAU,UAAf,SACE,qBAAKA,UAAU,YAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOe,KAAK,IAAIC,QAAS,oBAAIhB,UAAU,QAAd,8BACzB,cAAC,IAAD,CAAOe,KAAK,OAAOC,QAAS,cAAC,IAAD,CAAUb,GAAG,IAAIc,SAAO,MACpD,cAAC,IAAD,CACEF,KAAK,IACLC,QAAS,cAAC,EAAD,MAEX,eAAC,IAAD,CAAOD,KAAK,OAAZ,UACE,cAAC,IAAD,CAAOG,OAAK,EAACF,QAAS,cAAC,EAAD,MACtB,cAAC,IAAD,CAAOD,KAAK,SAASC,QAAS,cAAC,EAAD,oBCvB1CG,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.5f44423a.chunk.js","sourcesContent":["import { Link } from 'react-router-dom';\nimport { Tab } from '../../types/Tab';\n\ntype Props = {\n  tabs: Tab[];\n  selectedTabId: string;\n};\n\nexport const Tabs: React.FC<Props> = ({\n  tabs,\n  selectedTabId,\n}) => {\n  const selectedTab: Tab | undefined = (\n    tabs.find((tab) => (\n      tab.id === selectedTabId\n    ))\n  );\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map((tab) => {\n            const { id, title } = tab;\n\n            return (\n              <li\n                key={id}\n                data-cy=\"Tab\"\n                className={\n                  id === selectedTab?.id\n                    ? 'is-active'\n                    : ''\n                }\n              >\n                <Link\n                  to={`/tabs/${id}`}\n                  data-cy=\"TabLink\"\n                >\n                  {title}\n                </Link>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {selectedTab ? selectedTab.content : 'Please select a tab'}\n      </div>\n    </div>\n  );\n};\n","import { useParams } from 'react-router-dom';\nimport { Tabs } from '../../components/Tabs/Tabs';\nimport { Tab } from '../../types/Tab';\n\nexport const tabs: Tab[] = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const TabsPage: React.FC = () => {\n  const { tabId = '0' } = useParams();\n\n  return (\n    <>\n      <h1 className=\"title\">Tabs page</h1>\n      <Tabs\n        tabs={tabs}\n        selectedTabId={tabId}\n      />\n    </>\n\n  );\n};\n","import { NavLink } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { FC } from 'react';\n\ntype Props = {\n  to: string;\n  text: string;\n};\n\nexport const PageNavLink: FC<Props> = ({ to, text }) => (\n  <NavLink\n    to={to}\n    className={({ isActive }) => (\n      classNames('navbar-item', { 'is-active': isActive })\n    )}\n  >\n    {text}\n  </NavLink>\n);\n\nexport const NavBar = () => {\n  return (\n    <nav\n      className=\"navbar is-light is-fixed-top is-mobile has-shadow\"\n      data-cy=\"Nav\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <PageNavLink to=\"/\" text=\"Home\" />\n          <PageNavLink to=\"/tabs\" text=\"Tabs\" />\n        </div>\n      </div>\n    </nav>\n  );\n};\n","export const HomePage = () => (\n  <h1 className=\"title\">Home page</h1>\n);\n","import 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport {\n  Navigate,\n  Route,\n  Routes,\n} from 'react-router-dom';\nimport { TabsPage } from './pages/TabsPage';\nimport { NavBar } from './components/Navbar/NavBar';\nimport { HomePage } from './pages/HomePage/HomePage';\n\nexport const App = () => (\n  <>\n    <NavBar />\n\n    <div className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"*\" element={<h1 className=\"title\">Page not found</h1>} />\n          <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n          <Route\n            path=\"/\"\n            element={<HomePage />}\n          />\n          <Route path=\"tabs\">\n            <Route index element={<TabsPage />} />\n            <Route path=\":tabId\" element={<TabsPage />} />\n          </Route>\n        </Routes>\n      </div>\n    </div>\n  </>\n);\n","import ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}